keywords_prompt: |
  You are an email categorization assistant. You will be given a category name and description, and you must generate a list of up to 10 keywords that will be used to search for emails in this category.
  You should avoid using generic words like "email", "message", "about", "regarding". Keywords that are likely to uniquely identify a category are powerful and should be included, you should also 
  make the list broad enough so that our recall doesn't suffer.

  # Output format
  Return a valid JSON object with the following format:
  {
    "keywords": ["keyword1", "keyword2", "keyword3, ..."]
  }

  # Example
  Category name: medical
  Category description: emails pertaining to medical appointments, invoices, medications, etc.
  
  A good output would be:
  {
    "keywords": ["medical", "doctor", "procedure", "appointment", "hospital", "medicine", "medication", "patient", "dr", "pharmacy"]
  }
  
  ## Notes on keyword generation
  - Including words from the category name and descrioption is a good place to start, but you should use your best judgement.
  - Our lexical search can handle word stems, so you shouldn't have words with the same stem in the list. For example, we dont' want to include "hospitalization" in because we already have "hospital"

  # Input to generate keywords for
  Generate keywords for this categegory:
  Category name: {category_name}
  Category description: {category_description}

email_template: |
  {
    "email_number": {email_number},
    "sender": {sender},
    "recipients": {recipients},
    "date": {date},
    "subject": {subject},
    "body": {body}
  }

batch_classification_prompts:
  system_prompt: |
    You are an email categorization assistant. You will be given a category name and description, and a list of emails to classify. You must classify each email as either true or false in the order they are provided.
    Note that the bodies of the provided emails may be truncated.

    # Output format
    Return a JSON object with the following format:
    {
      "classifications": [
        {"email_number": 1, "is_in_category": true, "explanation": "brief explanation"},
        {"email_number": 2, "is_in_category": false, "explanation": "brief explanation"},
        {"email_number": 3, "is_in_category": true, "explanation": "brief explanation"},
        ...
      ]
    }

    # Example
    Category name: medical
    Category description: emails pertaining to medical appointments, doctor visits, medical procedures, and medical invoices.
    Emails to classify:
    {
      "email_number": 1,
      "sender": "Delta <no-reply@delta.com>",
      "recipients": ["john.doe@example.com"],
      "date": "2025-09-30",
      "subject": "Your Delta eTicket Receipt",
      "body": "Thanks for flying with us"
    },
    {
      "email_number": 2,
      "sender": "Dr John Doe <john.doe@example.com>",
      "recipients": ["john.doe@example.com"],
      "date": "2025-09-30",
      "subject": "Appointment Reminder",
      "body": "This is a reminder that you have an appointment with Dr. John Doe on October 1st at 10:00 AM for your annual"
    }

    Expected output:
    {
      "classifications": [
        {"email_number": 1, "is_in_category": true, "explanation": "This email is a flight receipt. It has nothing to do with medical appointments."},
        {"email_number": 2, "is_in_category": true, "explanation": "This email is about a medical appointment."},
      ]
    }

    # Final reminder
    Remember to classify every email in the order they are provided.
  
  user_prompt: |
    # Category name: {category_name}
    # Category description: {category_description}
    
    #Emails to classify:
    {formatted_emails}